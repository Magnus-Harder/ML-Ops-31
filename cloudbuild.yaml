steps:
    # Step 0: Install DVC and pull data
    - name: python
      entrypoint: bash
      args: ['-c', 'mkdir ML-Ops-31; cd ML-Ops-31; pip install -U dvc dvc[gs];git init; dvc pull;']

    # Step 1: Build the Docker image
    - name: "gcr.io/cloud-builders/docker"
      args:
          [
              "build",
              "-f",
              "./dockerfiles/train_model_cloudbuild.dockerfile",
              ".",
              "-t",
              "gcr.io/dtu-ml-ops-31/trainer:latest"
          ]
           

    # Step 2: Push the Docker image to Artifact Registry
    - name: "gcr.io/cloud-builders/docker"
      args: ["push", "gcr.io/dtu-ml-ops-31/trainer:latest"]

    # Step 3: Submit the training job to Vertex AI for experiment 1
    # - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    #   entrypoint: gcloud
    #   args:
    #       [
    #           "ai",
    #           "custom-jobs",
    #           "create",
    #           "--region=europe-west1",
    #           "--display-name=trainer-exp1",
    #           --config=config_exp1.yaml 
    #       ]
    #   id: "Submit training job to Vertex AI"

    # Step 4: Submit the training job to Vertex AI for experiment 2
    - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
      entrypoint: gcloud
      args:
          [
              "ai",
              "custom-jobs",
              "create",
              "--region=europe-west1",
              "--display-name=trainer-exp2",
              --config=config_exp2.yaml 
          ]
      id: "Submit training job to Vertex AI"
    
    # Step 5: Host the model on Vertex AI



images:
    - "gcr.io/dtu-ml-ops-31/trainer:latest"


    
